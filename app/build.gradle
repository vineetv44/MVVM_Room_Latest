apply plugin: 'com.android.application'

def libs = rootProject.ext.libraries
def cfg = rootProject.ext.configuration

android {
    compileSdkVersion cfg.androidCompileSdkVersion
    buildToolsVersion cfg.androidBuildToolsVersion

    defaultConfig {
        applicationId cfg.appID
        minSdkVersion cfg.androidMinSdkVersion
        targetSdkVersion cfg.androidTargetSdkVersion
        versionCode cfg.appVersionCode
        versionName cfg.appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    dexOptions {
        preDexLibraries true
        javaMaxHeapSize "4g"
        dexInProcess = true
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", URL_DEV)
        }
        release {
            buildConfigField("String", "BASE_URL", URL_PROD)
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        incremental false
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //mix support libraries
    implementation 'com.vividsolutions:jts-core:1.14.0'
    implementation 'com.rilixtech:materialfancybuttons:1.8.7'
    implementation 'com.rilixtech:community-material-typeface:1.9.32.2'
    implementation 'com.github.pwittchen:reactivenetwork-rx2:0.12.3'
    implementation "me.leolin:ShortcutBadger:1.1.21@aar"
    implementation "org.jsoup:jsoup:${libs.jSoupVersion}"

    //glide
    implementation "com.github.bumptech.glide:glide:${libs.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${libs.glideVersion}"

    // android design
    implementation "com.android.support:design:${libs.androidSupportVersion}"
    implementation "com.android.support:support-v4:${libs.androidSupportVersion}"
    implementation "com.android.support:appcompat-v7:${libs.androidSupportVersion}"
    implementation "com.android.support:support-core-utils:${libs.androidSupportVersion}"
    implementation "com.android.support:transition:${libs.androidSupportVersion}"
    implementation "com.android.support:support-vector-drawable:${libs.androidSupportVersion}"
    implementation "com.android.support:gridlayout-v7:${libs.androidSupportVersion}"
    implementation "com.android.support:recyclerview-v7:${libs.androidSupportVersion}"
    implementation "com.android.support:cardview-v7:${libs.androidSupportVersion}"

    // Priority Job Queue
    implementation "com.birbit:android-priority-jobqueue:$libs.priorityJobQueueVersion"

    //rxJava2
    implementation "javax.inject:javax.inject:${libs.javaxInjectVersion}"
    implementation "io.reactivex.rxjava2:rxjava:${libs.rxJavaVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxAndroidVersion}"
    implementation "com.jakewharton.rxrelay2:rxrelay:${libs.rxRelayVersion}"

    //LiveData and Lifecycle android component
    implementation "android.arch.lifecycle:runtime:${libs.architectureComponentVersion}"
    implementation "android.arch.lifecycle:extensions:${libs.architectureComponentVersion}"
    implementation "android.arch.lifecycle:reactivestreams:${libs.architectureComponentVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${libs.architectureComponentVersion}"

    //Room
    implementation "android.arch.persistence.room:runtime:${libs.roomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${libs.roomVersion}"
    annotationProcessor "android.arch.persistence.room:compiler:${libs.roomVersion}"

    //retrofit2
    implementation "com.squareup.retrofit2:retrofit:${libs.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${libs.retrofitVersion}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${libs.retrofitVersion}"
    implementation "com.jakewharton.timber:timber:${libs.timberVersion}"
    implementation "com.jakewharton.timber:timber:${libs.timberVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libs.retrofitLoggingVersion}"

    // dagger
    implementation "com.google.dagger:dagger:${libs.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${libs.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${libs.daggerVersion}"

    // for the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:${libs.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${libs.daggerVersion}"


    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${libs.leakcanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakcanaryVersion}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakcanaryVersion}"

    //butterknife
    implementation "com.jakewharton:butterknife:${libs.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterKnifeVersion}"

    //lombok
    compileOnly "org.projectlombok:lombok:${libs.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${libs.lombokVersion}"

    //testing libraries
    testImplementation "junit:junit:${libs.jUnitVersion}"
    testImplementation "org.mockito:mockito-core:${libs.mockitoVersion}"
    androidTestImplementation "org.mockito:mockito-core:${libs.mockitoVersion}"
    androidTestImplementation "com.android.support:support-annotations:${libs.androidSupportVersion}"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:${libs.dexmakerVersion}"
    androidTestImplementation "com.android.support.test:runner:${libs.testRunnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libs.espressoVersion}"
    androidTestImplementation "com.android.support.test:rules:${libs.testRunnerVersion}"

}
